extends base

block content 
    div(class="fixed top-0 left-0 flex items-center justify-center w-full h-full overflow-hidden bg-gray-50 backdrop -z-1") 
        if !video.backdrop_path 
            img(class="h-overflow max-w-none filter blur-sm", src="/contents/nullBackdrop.png", alt="Null Backdrop")
        else 
            img(class="h-overflow max-w-none filter blur-sm", src=`https://image.tmdb.org/t/p/w500${video.backdrop_path}`, alt="Poster Image") 
    div(class="absolute w-3/4 transform -translate-x-1/2 bg-white mt-72 rounded-t-2xl min-h-88 left-1/2 detail-container") 
        div(class="absolute overflow-hidden transform -translate-x-1/2 shadow-lg poster w-96 rounded-2xl -top-64 left-1/2 lg:translate-x-0 lg:left-4")
            if !video.poster_path 
                img(class="w-96", src="/contents/nullPoster.png", alt="Null Poster")
            else 
                img(class="w-96 h-poster", src=`https://image.tmdb.org/t/p/w500${video.poster_path}`, alt="Poster Image") 
            if video.adult 
                img(class="absolute rounded-full shadow-md -right-1 -bottom-1 w-14", src="/contents/forAdult.png", alt="For Adult")
        div(class="detail xs:p-4 xs:mt-80 lg:mt-0 lg:ml-96 lg:pl-8") 
            h1.font-roboto.text-2xl.mb-2 #{video.title || video.name || '"Unknown"'}
            .about-less.flex.justfy-center.items-center 
                .video_average.relative 
                    svg(class="relative", xmlns="http://www.w3.org/2000/svg", width="70", height="70", fill="none") 
                        circle(class=`text-mg-${parseInt((video.vote_average * 10) / 10)} transform translate-x-1 translate-y-1 stroke-current stroke-6`, cx="30", cy="30", r="30")
                    .range.absolute.top-6.left-5 
                        h2(class=`transform -translate-y-0.5 ${video.vote_average * 10 === 100 ? "-translate-x-1" : video.vote_average * 10 === 0 ? "translate-x-1" :  ""} font-roboto`) #{video.vote_average * 10}
                            span %
                div(class="mb-1 ml-2 text-details") 
                    small.font-roboto.text-md #{!video.first_air_date && video.release_date ? `Released At : ${video.release_date.split("-").join(".")}` : !video.release_date && video.first_air_date ? `First Aired At : ${video.first_air_date.split("-").join(".")}` : '"Unknown"'} 
                    small.font-roboto.text-md.ml-4 #{video.hasOwnProperty("video") ? "Movie" : "TV"}
                    small.font-roboto.text-md.ml-4 #{!video.hasOwnProperty("video") ? "" : video.runtime < 60 ? `${video.runtime % 60}m` : video.runtime % 60 === 0 ? `${parseInt(video.runtime / 60)}h` : video.runtime ? `${parseInt(video.runtime / 60)}h ${video.runtime % 60}m` : '"Unknown"'}
                    div(class="mt-1 genres") 
                        each genre in video.genres 
                            small.font-raleway.mr-4.genre=genre.name 
            p.font-roboto.text-justify.mt-2=video.overview
            if !video.hasOwnProperty("video") 
                .tv-show-seasons.mt-4.flex.flex-col 
                    if video.last_episode_to_air 
                        h1.title.font-sans.text-xl Seasons 
                        .seasons.flex.flex-wrap.w-64 
                            - for (var i = 0; i < video.last_episode_to_air.season_number; i++)
                                a(href=routes.seasonDetail(video.id, i+1)) 
                                    h1.font-roboto.mb-2.mr-2 SEASON #{i+1} 
                    else 
                        h1 "Unknown Season"